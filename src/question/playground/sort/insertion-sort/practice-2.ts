export {};

// 插入排序（Insertion Sort）是一种简单直观的排序算法，其核心思想是逐步构建一个有序序列，每次从未排序部分取出一个元素，将其插入到已排序部分的正确位置。
// 这个过程类似于我们整理扑克牌时的动作：左手始终持有已排序的牌，右手依次抓取新牌并插入到合适位置。

// 核心思路
// 初始状态：将数组的第一个元素视为已排序序列，其余为未排序序列。
// 迭代过程：
// * 从第二个元素开始，逐个取出未排序元素；
// * 将该元素与已排序序列中的元素从后往前比较；
// * 如果发现当前元素比前一个元素小，则交换位置；
// * 重复上述步骤，直到找到合适的位置；
// 最终结果：所有元素都被插入到正确位置，整个数组变为有序。

const insertionSort = (arr: number[]) => {
  for (let i = 1; i < arr.length; i++) {
    const current = arr[i];
    let j = i - 1;
    while (j >= 0 && arr[j] > current) {
      arr[j + 1] = arr[j];
      j--;
    }
    arr[j + 1] = current;
  }

  return arr;
};

console.log(insertionSort([3, 6, 2, 4, 1]));
